#!  /usr/bin/perl -w

use strict;

my $TEL = 110; # Total Element Length - cut the wires this long.
my $AH  = 37.25;   # Apex height (correct wrt. back of house)
my $FH  = 27.6;    # Feed height
my $WTH = 15.5;    # West Tree height (correct)
my $WD  = (0.0403 / 12.0);  # Wire diameter (18 ga. in feet)
my $AML = (32.0 /12.0);     # Apex mount length. Length from middle of pole to outside hole of insulator. (correct)
my $FML = 0.5 ;    # Feed mount length.

my $fl   = sqrt(($AML - $FML)**2 + ($AH - $FH)**2); # Feeder length (from a^2 + b^2 = c^2).
my $wl   = $TEL - $fl;              # Wire Length
my $wne  = int(($wl / 1.64) + 0.5); # Number elements in wire. Elements approximately 0.5 meters long.
my $fne  = int(($fl / 1.64) + 0.5); # Number elements in feeder.

# Move parameters wrt. origin for wire to West Tree.
my $ROX_WT =  0.0;
my $ROY_WT =  7.8; # (correct)
my $ROZ_WT =  0.0; # Horizontal angle of doublet away from perfectly straight. (correct)
my $YS_WT  =  0.0;
my $xs_wt  = $AML;

# Move parameters wrt. origin for wire to Shed.
my $ROX_S  =   0.0;
my $ROY_S  =  -2.3; # (correct)
my $ROZ_S  =   0.0;
my $YS_S   =   0.0;
my $xs_s   = -$AML;

print <<EOT1;
CM Geometric model of main house antenna.
CM Units in feet, scaled to meters by GS statement.
CM This file generated by $0.
CM Total Element length is $TEL feet.  Of that, the approximately
CM horizontal wires are each $wl feet long and
CM Feeder wires are each $fl feet long.
CE --- End Comments ---

EOT1

print( "#  TAG    N       x1      y1      z1       x2      y2      z2  diameter\n");
printf("GW   1   %2d  %7.2f %7.2f %7.2f  %7.2f %7.2f %7.2f  %5.3f\n", $wne, $wl, 0.0, 0.0, 0.0, 0.0, 0.0, $WD);
print( "# ITGI NRPT      ROX     ROY     ROZ       XS      YS      ZS  ITS\n");
printf("GM   0    0  %7.2f %7.2f %7.2f  %7.2f %7.2f %7.2f  1\n", $ROX_WT, $ROY_WT, $ROZ_WT, $xs_wt, $YS_WT, $AH);
print( "\n");

print( "#  TAG    N       x1      y1      z1       x2      y2      z2  diameter\n");
printf("GW   2   %2d  %7.2f %7.2f %7.2f  %7.2f %7.2f %7.2f  %5.3f\n", $wne, 0.0, 0.0, 0.0, -$wl, 0.0, 0.0, $WD);
print( "# ITGI NRPT      ROX     ROY     ROZ       XS      YS      ZS  ITS\n");
printf("GM   0    0  %7.2f %7.2f %7.2f  %7.2f %7.2f %7.2f  2\n", $ROX_S,  $ROY_S,  $ROZ_S,  $xs_s,  $YS_S,  $AH);
print( "\n");

print( "#  TAG    N       x1      y1      z1       x2      y2      z2  diameter\n");
printf("GW   3   %2d  %7.2f %7.2f %7.2f  %7.2f %7.2f %7.2f  %5.3f\n", $fne,  $AML, 0.0, $AH,  $FML, 0.0, $FH, $WD);
printf("GW   4   %2d  %7.2f %7.2f %7.2f  %7.2f %7.2f %7.2f  %5.3f\n", $fne, -$AML, 0.0, $AH, -$FML, 0.0, $FH, $WD);
printf("GW   5   %2d  %7.2f %7.2f %7.2f  %7.2f %7.2f %7.2f  %5.3f\n",    1,  $FML, 0.0, $FH, -$FML, 0.0, $FH, $WD);
print( "\n");

print <<EOT;
# xnec2 style GS statement.
GS  0 0 0.30480
GE  1

# voltsrc element segment      real volts
EX  0        5       1      0    1.00      0.00 0.00 0.00 0.00 0.00       

# linear nfrq       fmhz   delfrq
FR  0     55  0  0  3.00    0.50   30.00  0.00  0.00  0.00       

# Radiation Pattern
#  normal nTheta nPhi  flags initTheta initPhi ThetaInc PhiInc RadialField GainNormalization
RP   0      37    74    1000    0.00    0.00     2.50    5.00      0.00           0.00       

# finite noScreen       dielectricConstant Conductivity
GN  2        0    0  0         12.00         0.01         0.00  0.00  0.00  0.00       

EN
EOT
